{
  "openapi": "3.0.0",
  "info": {
    "title": "Semicolon API",
    "version": "1.0.0",
    "description": ""
  },
  "servers": [
    {
      "url": "https://semicolon-registration-backend.onrender.com/"
    }
  ],
  "tags": [
    {
      "name": "User",
      "description": "User Endpoints"
    },
    {
      "name": "Auth",
      "description": "Authentication Endpoints"
    },
    {
      "name": "Participants",
      "description": "Participants Endpoints"
    },
    {
      "name": "Log",
      "description": "Log Endpoints"
    }
  ],
  "paths": {
    "/user/phone/{phone}": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Endpoint to get a specific user by phone number",
        "parameters": [
          {
            "name": "phone",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/user/getAll": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Endpoint to get all users",
        "responses": {
          "200": {
            "description": "All users data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllUsers"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AllUsers"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/user/": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "Endpoint to get add a new user",
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/user/update/{id}": {
      "patch": {
        "tags": [
          "User"
        ],
        "description": "Endpoint to update a user using his ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/user/activate/{id}": {
      "patch": {
        "tags": [
          "User"
        ],
        "description": "Endpoint to activate a specific user using his ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/user/deactivate/{id}": {
      "patch": {
        "tags": [
          "User"
        ],
        "description": "Endpoint to deactivate a specific user using his ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/user/{id}": {
      "delete": {
        "tags": [
          "User"
        ],
        "description": "Endpoint to delete a specific user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "Endpoint to authenticate All logins",
        "parameters": [
          {
            "name": "loginData",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/LoginData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Responses"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Responses"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginData"
              }
            }
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "Endpoint to authenticate All registers",
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "req": {
                    "example": "any"
                  },
                  "role": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/participants/getAll": {
      "get": {
        "tags": [
          "Participants"
        ],
        "description": "Endpoint to get all participants from database",
        "responses": {
          "200": {
            "description": "All Participants data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllPars"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AllPars"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/participants/add": {
      "post": {
        "tags": [
          "Participants"
        ],
        "description": "Endpoint to get add a participant to database",
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "participant": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/participants/update": {
      "patch": {
        "tags": [
          "Participants"
        ],
        "description": "Endpoint to update a participant in database",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "update": {
                    "example": "any"
                  },
                  "phone": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/participants/delete": {
      "delete": {
        "tags": [
          "Participants"
        ],
        "description": "Endpoint to get delete a participant from database",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "phone": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/participants/email": {
      "post": {
        "tags": [
          "Participants"
        ],
        "description": "Endpoint to email a participant in database",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "example": "any"
                  },
                  "preferences": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/participants/interview/note": {
      "patch": {
        "tags": [
          "Participants"
        ],
        "description": "Endpoint to add a note to a participant in database",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "note": {
                    "example": "any"
                  },
                  "phone": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/participants/status": {
      "patch": {
        "tags": [
          "Participants"
        ],
        "description": "Endpoint to update a participant",
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/log/": {
      "get": {
        "tags": [
          "Log"
        ],
        "description": "Endpoint to get all logs by all admins",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/log/admin/{phone}": {
      "get": {
        "tags": [
          "Log"
        ],
        "description": "Endpoint to get all logs by an admin using their phone",
        "parameters": [
          {
            "name": "phone",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/log/participant/{id}": {
      "get": {
        "tags": [
          "Log"
        ],
        "description": "Endpoint to get all logs applied on a participant",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "Ahmed Atwa"
          },
          "role": {
            "type": "string",
            "example": "admin"
          },
          "token": {
            "type": "string",
            "example": "xxxxxxx"
          }
        },
        "required": [
          "username",
          "role",
          "token"
        ],
        "xml": {
          "name": "User"
        }
      },
      "Participant": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "xxxxx"
          },
          "name": {
            "type": "string",
            "example": "Omar Fahmy"
          },
          "email": {
            "type": "string",
            "example": "Omar_Fahmy@gmail.com"
          },
          "phone": {
            "type": "string",
            "example": "01xxxxxxxxx"
          },
          "firstPreference": {
            "type": "string",
            "example": "Web Development (ReactJS)"
          },
          "secondPreference": {
            "type": "string",
            "example": "Web Development (NodeJS)"
          },
          "firstPrefReason": {
            "type": "string",
            "example": ""
          },
          "firstPrefKnowledge": {
            "type": "string",
            "example": ""
          },
          "secondPrefReason": {
            "type": "string",
            "example": ""
          },
          "pastExperience": {
            "type": "string",
            "example": ""
          },
          "collegeId": {
            "type": "string",
            "example": "18xxxxx"
          },
          "year": {
            "type": "string",
            "example": "Junior"
          },
          "acceptanceStatus": {
            "type": "string",
            "example": "accepted"
          },
          "emailedStatus": {
            "type": "string",
            "example": "true"
          }
        },
        "required": [
          "_id",
          "name",
          "email",
          "phone",
          "firstPreference",
          "secondPreference",
          "firstPrefReason",
          "firstPrefKnowledge",
          "secondPrefReason",
          "pastExperience",
          "collegeId",
          "year",
          "acceptanceStatus",
          "emailedStatus"
        ],
        "xml": {
          "name": "Participant"
        }
      },
      "Log": {
        "type": "object",
        "properties": {
          "adminId": {
            "type": "string",
            "example": ""
          },
          "adminPhone": {
            "type": "string",
            "example": "01xxxxxxxxx"
          },
          "participantId": {
            "type": "string",
            "example": ""
          },
          "action": {
            "type": "string",
            "example": "add"
          }
        },
        "required": [
          "adminId",
          "adminPhone",
          "participantId",
          "action"
        ],
        "xml": {
          "name": "Log"
        }
      },
      "LoginData": {
        "type": "object",
        "properties": {
          "phone": {
            "type": "string",
            "example": "01xxxxxxxxx"
          },
          "password": {
            "type": "string",
            "example": "********"
          }
        },
        "required": [
          "phone",
          "password"
        ],
        "xml": {
          "name": "LoginData"
        }
      },
      "Responses": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "success"
          },
          "data": {
            "xml": {
              "name": "user"
            },
            "$ref": "#/components/schemas/User"
          }
        },
        "required": [
          "status",
          "data"
        ],
        "xml": {
          "name": "Responses"
        }
      },
      "AllPars": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "success"
          },
          "data": {
            "type": "array",
            "items": {
              "xml": {
                "name": "participant"
              },
              "$ref": "#/components/schemas/Participant"
            }
          }
        },
        "required": [
          "status",
          "data"
        ],
        "xml": {
          "name": "AllPars"
        }
      },
      "AllUsers": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "success"
          },
          "data": {
            "type": "array",
            "items": {
              "xml": {
                "name": "user"
              },
              "$ref": "#/components/schemas/User"
            }
          }
        },
        "required": [
          "status",
          "data"
        ],
        "xml": {
          "name": "AllUsers"
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}